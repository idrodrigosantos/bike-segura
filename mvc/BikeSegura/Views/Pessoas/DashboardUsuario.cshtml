@model IEnumerable<BikeSegura.Models.Historicos>

@{
    ViewBag.Title = "Dashboard Usuário";
    Layout = "~/Views/Shared/_Usuario.cshtml";
}

<div class="container conteudo">
    <p>
        <a class="btn btn-success" href="@Url.Action("Create", "Bicicletas")" role="button">
            <i class="fas fa-plus"></i>
            Cadastrar Bicicleta
        </a>
    </p>
    <div class="table-responsive">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>
                        Marca
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Bicicletas.Modelo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Bicicletas.Tipos.Nome)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Bicicletas.Cor)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Bicicletas.AlertaRoubo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Bicicletas.Vendendo)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bicicletas.Marcas.Nome)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bicicletas.Modelo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bicicletas.Tipos.Nome)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bicicletas.Cor)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bicicletas.AlertaRoubo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bicicletas.Vendendo)
                        </td>
                        <td>
                            <div class="btn" role="group">
                                <a class="btn btn-success" href="@Url.Action("Details", "Bicicletas", new { id = item.BicicletasId })" role="button">
                                    <i class="fas fa-list"></i>
                                    Detalhes
                                </a>
                                <a class="btn btn-primary" href="@Url.Action("Edit", "Bicicletas", new { id = item.BicicletasId })" role="button">
                                    <i class="fas fa-pen"></i>
                                    Editar
                                </a>
                                @*<a class="btn btn-danger" href="@Url.Action("Delete", "Bicicletas", new { id = item.BicicletasId })" role="button">
                                        <i class="fas fa-times"></i>
                                        Excluir
                                    </a>*@
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <br />
    <div class="row">
        <div class="col-lg-6">
            <h4>Número de Bicicletas Seguras e Roubadas</h4>
            <canvas class="my-4 w-100" id="myChart1" width="900" height="380" style="background-color:white;"></canvas>
        </div>
        <div class="col-lg-6">
            <h4>Número de Bicicletas Seguras e Roubadas</h4>
            <canvas class="my-4 w-100" id="myChart2" width="900" height="380" style="background-color:white;"></canvas>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/chartjs")
    <script>
        var ctx = document.getElementById("myChart1").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ["Bicicletas Seguras", "Bicicletas Roubada"],
                datasets: [{
                    label: 'Número de Bicicletas',
                    data: [@ViewData["TOTALBIKESEGURA"], @ViewData["TOTALBIKEROUBADA"]],
                    backgroundColor: [
                        'rgba(102, 255, 51, 1)',
                        'rgba(255, 51, 0, 1)'
                    ],
                    borderColor: [
                        'rgba(0, 153, 0, 1)',
                        'rgba(255,99,132,1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>
    <script>
        var ctx = document.getElementById("myChart2").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ["Bicicletas que NÃO estão à Venda", "Bicicletas à Venda"],
                datasets: [{
                    label: 'Número de Bicicletas',
                    data: [@ViewData["TOTALBIKESEMVENDER"], @ViewData["TOTALBIKEVENDENDO"]],
                    backgroundColor: [
                        'rgba(0, 102, 255, 1)',
                        'rgba(255, 255, 102, 1)'
                    ],
                    borderColor: [
                        'rgba(0, 0, 255, 1)',
                        'rgba(255,255,0,1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>
}